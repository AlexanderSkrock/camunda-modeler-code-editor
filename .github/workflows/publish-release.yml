name: Publish a release

on:
  push:
    tags:
      # Matches tags that have the shape `vX.Y.Z`
      # Reference: https://help.github.com/en/articles/workflow-syntax-for-github-actions#onpushpull_requesttagsbranches
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  create-github-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci
      - run: npx nx run-many -t pack-plugin --args="--source {projectRoot} --destination packs"
  
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          artifacts: "./packs/*.zip"
          artifactErrorsFailBuild: true

# Currently we do not publish to GithubPackages
#          
#  publish-github-package:
#    runs-on: ubuntu-latest
#
#    permissions:
#      id-token: write
#
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          ref: ${{ github.ref }}
#      - uses: actions/setup-node@v4
#        with:
#          node-version: 20
#          registry-url: https://npm.pkg.github.com/
#          scope: "@camunda-modeler-code-editor"
#
#      - run: npm ci
#      - run: npx nx run-many -t build
#
#      - run: npx nx release publish --access public --exclude "@camunda-modeler-code-editor/root"
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NPM_CONFIG_PROVENANCE: true

  publish-npm-package:
    runs-on: ubuntu-latest

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          scope: "@camunda-modeler-code-editor"

      - run: npm ci
      - run: npx nx run-many -t build

      - run: npx nx release publish --access public --exclude "@camunda-modeler-code-editor/root"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
          NPM_CONFIG_PROVENANCE: true

